// <auto-generated />
using System;
using CookSolver.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CookSolver.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220607061856_AddMealTags")]
    partial class AddMealTags
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CookSolver.Data.Entities.Meal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Meal");
                });

            modelBuilder.Entity("CookSolver.Data.Entities.Meal2MealTag", b =>
                {
                    b.Property<Guid>("MealId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MealTagId")
                        .HasColumnType("uuid");

                    b.HasKey("MealId", "MealTagId");

                    b.HasIndex("MealTagId");

                    b.ToTable("Meal2MealTag");
                });

            modelBuilder.Entity("CookSolver.Data.Entities.MealHistoryItem", b =>
                {
                    b.Property<Guid>("MealId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.HasKey("MealId", "Date");

                    b.ToTable("MealHistoryItem");
                });

            modelBuilder.Entity("CookSolver.Data.Entities.MealTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MealTag");
                });

            modelBuilder.Entity("CookSolver.Data.Entities.Meal2MealTag", b =>
                {
                    b.HasOne("CookSolver.Data.Entities.Meal", "Meal")
                        .WithMany("Meal2MealTags")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CookSolver.Data.Entities.MealTag", "MealTag")
                        .WithMany("Meal2MealTags")
                        .HasForeignKey("MealTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("MealTag");
                });

            modelBuilder.Entity("CookSolver.Data.Entities.MealHistoryItem", b =>
                {
                    b.HasOne("CookSolver.Data.Entities.Meal", "Meal")
                        .WithMany("MealHistoryItems")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("CookSolver.Data.Entities.Meal", b =>
                {
                    b.Navigation("Meal2MealTags");

                    b.Navigation("MealHistoryItems");
                });

            modelBuilder.Entity("CookSolver.Data.Entities.MealTag", b =>
                {
                    b.Navigation("Meal2MealTags");
                });
#pragma warning restore 612, 618
        }
    }
}
